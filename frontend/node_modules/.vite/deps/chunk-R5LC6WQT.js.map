{
  "version": 3,
  "sources": ["../../vuetify/src/components/VWindow/VWindow.tsx", "../../vuetify/src/components/VWindow/VWindowItem.tsx"],
  "sourcesContent": ["// Styles\nimport './VWindow.sass'\n\n// Components\nimport { VBtn } from '@/components/VBtn'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { useGroup } from '@/composables/group'\nimport { useLocale, useRtl } from '@/composables/locale'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Directives\nimport { Touch } from '@/directives/touch'\n\n// Utilities\nimport { computed, provide, ref, shallowRef, watch } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { ComputedRef, InjectionKey, PropType, Ref } from 'vue'\nimport type { GroupItemProvide, GroupProvide } from '@/composables/group'\nimport type { IconValue } from '@/composables/icons'\nimport type { TouchHandlers } from '@/directives/touch'\n\nexport type VWindowSlots = {\n  default: { group: GroupProvide }\n  additional: { group: GroupProvide }\n  prev: { props: ControlProps }\n  next: { props: ControlProps }\n}\n\ntype WindowProvide = {\n  transition: ComputedRef<undefined | string>\n  transitionCount: Ref<number>\n  transitionHeight: Ref<undefined | string>\n  isReversed: Ref<boolean>\n  rootRef: Ref<HTMLElement | undefined>\n}\n\ntype ControlProps = {\n  icon: IconValue\n  class: string\n  onClick: () => void\n  ariaLabel: string\n}\n\nexport const VWindowSymbol: InjectionKey<WindowProvide> = Symbol.for('vuetify:v-window')\nexport const VWindowGroupSymbol: InjectionKey<GroupItemProvide> = Symbol.for('vuetify:v-window-group')\n\nexport const makeVWindowProps = propsFactory({\n  continuous: Boolean,\n  nextIcon: {\n    type: [Boolean, String, Function, Object] as PropType<IconValue>,\n    default: '$next',\n  },\n  prevIcon: {\n    type: [Boolean, String, Function, Object] as PropType<IconValue>,\n    default: '$prev',\n  },\n  reverse: Boolean,\n  showArrows: {\n    type: [Boolean, String],\n    validator: (v: any) => typeof v === 'boolean' || v === 'hover',\n  },\n  touch: {\n    type: [Object, Boolean] as PropType<boolean | TouchHandlers>,\n    default: undefined,\n  },\n  direction: {\n    type: String as PropType<'horizontal' | 'vertical'>,\n    default: 'horizontal',\n  },\n\n  modelValue: null,\n  disabled: Boolean,\n  selectedClass: {\n    type: String,\n    default: 'v-window-item--active',\n  },\n  // TODO: mandatory should probably not be exposed but do this for now\n  mandatory: {\n    type: [Boolean, String] as PropType<boolean | 'force'>,\n    default: 'force' as const,\n  },\n\n  ...makeComponentProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n}, 'VWindow')\n\nexport const VWindow = genericComponent<VWindowSlots>()({\n  name: 'VWindow',\n\n  directives: {\n    Touch,\n  },\n\n  props: makeVWindowProps(),\n\n  emits: {\n    'update:modelValue': (v: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { isRtl } = useRtl()\n    const { t } = useLocale()\n\n    const group = useGroup(props, VWindowGroupSymbol)\n\n    const rootRef = ref()\n    const isRtlReverse = computed(() => isRtl.value ? !props.reverse : props.reverse)\n    const isReversed = shallowRef(false)\n    const transition = computed(() => {\n      const axis = props.direction === 'vertical' ? 'y' : 'x'\n      const reverse = isRtlReverse.value ? !isReversed.value : isReversed.value\n      const direction = reverse ? '-reverse' : ''\n\n      return `v-window-${axis}${direction}-transition`\n    })\n    const transitionCount = shallowRef(0)\n    const transitionHeight = ref<undefined | string>(undefined)\n\n    const activeIndex = computed(() => {\n      return group.items.value.findIndex(item => group.selected.value.includes(item.id))\n    })\n\n    watch(activeIndex, (newVal, oldVal) => {\n      const itemsLength = group.items.value.length\n      const lastIndex = itemsLength - 1\n\n      if (itemsLength <= 2) {\n        isReversed.value = newVal < oldVal\n      } else if (newVal === lastIndex && oldVal === 0) {\n        isReversed.value = true\n      } else if (newVal === 0 && oldVal === lastIndex) {\n        isReversed.value = false\n      } else {\n        isReversed.value = newVal < oldVal\n      }\n    })\n\n    provide(VWindowSymbol, {\n      transition,\n      isReversed,\n      transitionCount,\n      transitionHeight,\n      rootRef,\n    })\n\n    const canMoveBack = computed(() => props.continuous || activeIndex.value !== 0)\n    const canMoveForward = computed(() => props.continuous || activeIndex.value !== group.items.value.length - 1)\n\n    function prev () {\n      canMoveBack.value && group.prev()\n    }\n\n    function next () {\n      canMoveForward.value && group.next()\n    }\n\n    const arrows = computed(() => {\n      const arrows = []\n\n      const prevProps = {\n        icon: isRtl.value ? props.nextIcon : props.prevIcon,\n        class: `v-window__${isRtlReverse.value ? 'right' : 'left'}`,\n        onClick: group.prev,\n        ariaLabel: t('$vuetify.carousel.prev'),\n      }\n\n      arrows.push(canMoveBack.value\n        ? slots.prev\n          ? slots.prev({ props: prevProps })\n          : <VBtn { ...prevProps } />\n        : <div />\n      )\n\n      const nextProps = {\n        icon: isRtl.value ? props.prevIcon : props.nextIcon,\n        class: `v-window__${isRtlReverse.value ? 'left' : 'right'}`,\n        onClick: group.next,\n        ariaLabel: t('$vuetify.carousel.next'),\n      }\n\n      arrows.push(canMoveForward.value\n        ? slots.next\n          ? slots.next({ props: nextProps })\n          : <VBtn { ...nextProps } />\n        : <div />\n      )\n\n      return arrows\n    })\n\n    const touchOptions = computed(() => {\n      if (props.touch === false) return props.touch\n\n      const options: TouchHandlers = {\n        left: () => {\n          isRtlReverse.value ? prev() : next()\n        },\n        right: () => {\n          isRtlReverse.value ? next() : prev()\n        },\n        start: ({ originalEvent }) => {\n          originalEvent.stopPropagation()\n        },\n      }\n\n      return {\n        ...options,\n        ...(props.touch === true ? {} : props.touch),\n      }\n    })\n\n    useRender(() => (\n      <props.tag\n        ref={ rootRef }\n        class={[\n          'v-window',\n          {\n            'v-window--show-arrows-on-hover': props.showArrows === 'hover',\n          },\n          themeClasses.value,\n          props.class,\n        ]}\n        style={ props.style }\n        v-touch={ touchOptions.value }\n      >\n        <div\n          class=\"v-window__container\"\n          style={{\n            height: transitionHeight.value,\n          }}\n        >\n          { slots.default?.({ group }) }\n\n          { props.showArrows !== false && (\n            <div class=\"v-window__controls\">\n              { arrows.value }\n            </div>\n          )}\n        </div>\n\n        { slots.additional?.({ group }) }\n      </props.tag>\n    ))\n\n    return {\n      group,\n    }\n  },\n})\n\nexport type VWindow = InstanceType<typeof VWindow>\n", "// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\nimport { makeLazyProps, useLazy } from '@/composables/lazy'\nimport { useSsrBoot } from '@/composables/ssrBoot'\nimport { MaybeTransition } from '@/composables/transition'\n\n// Directives\nimport Touch from '@/directives/touch'\n\n// Utilities\nimport { computed, inject, nextTick, shallowRef } from 'vue'\nimport { convertToUnit, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport { VWindowGroupSymbol, VWindowSymbol } from './VWindow'\n\nexport const makeVWindowItemProps = propsFactory({\n  reverseTransition: {\n    type: [Boolean, String],\n    default: undefined,\n  },\n  transition: {\n    type: [Boolean, String],\n    default: undefined,\n  },\n\n  ...makeComponentProps(),\n  ...makeGroupItemProps(),\n  ...makeLazyProps(),\n}, 'VWindowItem')\n\nexport const VWindowItem = genericComponent()({\n  name: 'VWindowItem',\n\n  directives: {\n    Touch,\n  },\n\n  props: makeVWindowItemProps(),\n\n  emits: {\n    'group:selected': (val: { value: boolean }) => true,\n  },\n\n  setup (props, { slots }) {\n    const window = inject(VWindowSymbol)\n    const groupItem = useGroupItem(props, VWindowGroupSymbol)\n    const { isBooted } = useSsrBoot()\n\n    if (!window || !groupItem) throw new Error('[Vuetify] VWindowItem must be used inside VWindow')\n\n    const isTransitioning = shallowRef(false)\n    const hasTransition = computed(() => isBooted.value && (\n      window.isReversed.value\n        ? props.reverseTransition !== false\n        : props.transition !== false\n    ))\n\n    function onAfterTransition () {\n      if (!isTransitioning.value || !window) {\n        return\n      }\n\n      // Finalize transition state.\n      isTransitioning.value = false\n      if (window.transitionCount.value > 0) {\n        window.transitionCount.value -= 1\n\n        // Remove container height if we are out of transition.\n        if (window.transitionCount.value === 0) {\n          window.transitionHeight.value = undefined\n        }\n      }\n    }\n\n    function onBeforeTransition () {\n      if (isTransitioning.value || !window) {\n        return\n      }\n\n      // Initialize transition state here.\n      isTransitioning.value = true\n\n      if (window.transitionCount.value === 0) {\n        // Set initial height for height transition.\n        window.transitionHeight.value = convertToUnit(window.rootRef.value?.clientHeight)\n      }\n\n      window.transitionCount.value += 1\n    }\n\n    function onTransitionCancelled () {\n      onAfterTransition() // This should have the same path as normal transition end.\n    }\n\n    function onEnterTransition (el: Element) {\n      if (!isTransitioning.value) {\n        return\n      }\n\n      nextTick(() => {\n        // Do not set height if no transition or cancelled.\n        if (!hasTransition.value || !isTransitioning.value || !window) {\n          return\n        }\n\n        // Set transition target height.\n        window.transitionHeight.value = convertToUnit(el.clientHeight)\n      })\n    }\n\n    const transition = computed(() => {\n      const name = window.isReversed.value\n        ? props.reverseTransition\n        : props.transition\n\n      return !hasTransition.value ? false : {\n        name: typeof name !== 'string' ? window.transition.value : name,\n        onBeforeEnter: onBeforeTransition,\n        onAfterEnter: onAfterTransition,\n        onEnterCancelled: onTransitionCancelled,\n        onBeforeLeave: onBeforeTransition,\n        onAfterLeave: onAfterTransition,\n        onLeaveCancelled: onTransitionCancelled,\n        onEnter: onEnterTransition,\n      }\n    })\n\n    const { hasContent } = useLazy(props, groupItem.isSelected)\n\n    useRender(() => (\n      <MaybeTransition transition={ transition.value } disabled={ !isBooted.value }>\n        <div\n          class={[\n            'v-window-item',\n            groupItem.selectedClass.value,\n            props.class,\n          ]}\n          style={ props.style }\n          v-show={ groupItem.isSelected.value }\n        >\n          { hasContent.value && slots.default?.() }\n        </div>\n      </MaybeTransition>\n    ))\n\n    return { groupItem }\n  },\n})\n\nexport type VWindowItem = InstanceType<typeof VWindowItem>\n"],
  "mappings": "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",
  "names": ["VWindowSymbol", "Symbol", "for", "VWindowGroupSymbol", "makeVWindowProps", "propsFactory", "continuous", "Boolean", "nextIcon", "type", "String", "Function", "Object", "default", "prevIcon", "reverse", "showArrows", "validator", "v", "touch", "undefined", "direction", "modelValue", "disabled", "selectedClass", "mandatory", "makeComponentProps", "makeTagProps", "makeThemeProps", "VWindow", "genericComponent", "name", "directives", "Touch", "props", "emits", "setup", "_ref", "slots", "themeClasses", "provideTheme", "isRtl", "useRtl", "t", "useLocale", "group", "useGroup", "rootRef", "ref", "isRtlReverse", "computed", "value", "isReversed", "shallowRef", "transition", "axis", "transitionCount", "transitionHeight", "activeIndex", "items", "findIndex", "item", "selected", "includes", "id", "watch", "newVal", "oldVal", "itemsLength", "length", "lastIndex", "provide", "canMoveBack", "canMoveForward", "prev", "next", "arrows", "prevProps", "icon", "class", "onClick", "ariaLabel", "push", "_createVNode", "VBtn", "nextProps", "touchOptions", "options", "left", "right", "start", "_ref2", "originalEvent", "stopPropagation", "useRender", "_withDirectives", "tag", "style", "height", "additional", "_resolveDirective", "makeVWindowItemProps", "propsFactory", "reverseTransition", "type", "Boolean", "String", "default", "undefined", "transition", "makeComponentProps", "makeGroupItemProps", "makeLazyProps", "VWindowItem", "genericComponent", "name", "directives", "Touch", "props", "emits", "val", "setup", "_ref", "slots", "window", "inject", "VWindowSymbol", "groupItem", "useGroupItem", "VWindowGroupSymbol", "isBooted", "useSsrBoot", "Error", "isTransitioning", "shallowRef", "hasTransition", "computed", "value", "isReversed", "onAfterTransition", "transitionCount", "transitionHeight", "onBeforeTransition", "convertToUnit", "rootRef", "clientHeight", "onTransitionCancelled", "onEnterTransition", "el", "nextTick", "onBeforeEnter", "onAfterEnter", "onEnterCancelled", "onBeforeLeave", "onAfterLeave", "onLeaveCancelled", "onEnter", "hasContent", "useLazy", "isSelected", "useRender", "_createVNode", "MaybeTransition", "_withDirectives", "selectedClass", "class", "style", "_vShow"]
}
