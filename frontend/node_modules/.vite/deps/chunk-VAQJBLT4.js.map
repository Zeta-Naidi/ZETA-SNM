{
  "version": 3,
  "sources": ["../../vuetify/src/components/VTable/VTable.tsx", "../../vuetify/src/components/VSheet/VSheet.tsx", "../../vuetify/src/composables/filter.ts"],
  "sourcesContent": ["// Styles\nimport './VTable.sass'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { convertToUnit, genericComponent, propsFactory, useRender } from '@/util'\n\nexport type VTableSlots = {\n  default: never\n  top: never\n  bottom: never\n  wrapper: never\n}\n\nexport const makeVTableProps = propsFactory({\n  fixedHeader: Boolean,\n  fixedFooter: Boolean,\n  height: [Number, String],\n  hover: Boolean,\n\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n}, 'VTable')\n\nexport const VTable = genericComponent<VTableSlots>()({\n  name: 'VTable',\n\n  props: makeVTableProps(),\n\n  setup (props, { slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { densityClasses } = useDensity(props)\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-table',\n          {\n            'v-table--fixed-height': !!props.height,\n            'v-table--fixed-header': props.fixedHeader,\n            'v-table--fixed-footer': props.fixedFooter,\n            'v-table--has-top': !!slots.top,\n            'v-table--has-bottom': !!slots.bottom,\n            'v-table--hover': props.hover,\n          },\n          themeClasses.value,\n          densityClasses.value,\n          props.class,\n        ]}\n        style={ props.style }\n      >\n        { slots.top?.() }\n\n        { slots.default ? (\n          <div\n            class=\"v-table__wrapper\"\n            style={{ height: convertToUnit(props.height) }}\n          >\n            <table>\n              { slots.default() }\n            </table>\n          </div>\n        ) : slots.wrapper?.()}\n\n        { slots.bottom?.() }\n      </props.tag>\n    ))\n\n    return {}\n  },\n})\n\nexport type VTable = InstanceType<typeof VTable>\n", "// Styles\nimport './VSheet.sass'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { useBackgroundColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeLocationProps, useLocation } from '@/composables/location'\nimport { makePositionProps, usePosition } from '@/composables/position'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { toRef } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVSheetProps = propsFactory({\n  color: String,\n\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDimensionProps(),\n  ...makeElevationProps(),\n  ...makeLocationProps(),\n  ...makePositionProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n}, 'VSheet')\n\nexport const VSheet = genericComponent()({\n  name: 'VSheet',\n\n  props: makeVSheetProps(),\n\n  setup (props, { slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'color'))\n    const { borderClasses } = useBorder(props)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { locationStyles } = useLocation(props)\n    const { positionClasses } = usePosition(props)\n    const { roundedClasses } = useRounded(props)\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-sheet',\n          themeClasses.value,\n          backgroundColorClasses.value,\n          borderClasses.value,\n          elevationClasses.value,\n          positionClasses.value,\n          roundedClasses.value,\n          props.class,\n        ]}\n        style={[\n          backgroundColorStyles.value,\n          dimensionStyles.value,\n          locationStyles.value,\n          props.style,\n        ]}\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VSheet = InstanceType<typeof VSheet>\n", "/* eslint-disable max-statements */\n/* eslint-disable no-labels */\n\n// Utilities\nimport { computed, ref, unref, watchEffect } from 'vue'\nimport { getPropertyFromItem, propsFactory, wrapInArray } from '@/util'\n\n// Types\nimport type { PropType, Ref } from 'vue'\nimport type { MaybeRef } from '@/util'\n\n/**\n * - match without highlight\n * - single match (index), length already known\n * - single match (start, end)\n * - multiple matches (start, end), probably shouldn't overlap\n */\nexport type FilterMatch = boolean | number | [number, number] | [number, number][]\nexport type FilterFunction = (value: string, query: string, item?: any) => FilterMatch\nexport type FilterKeyFunctions = Record<string, FilterFunction>\nexport type FilterKeys = string | string[]\nexport type FilterMode = 'some' | 'every' | 'union' | 'intersection'\n\nexport interface FilterProps {\n  customFilter?: FilterFunction\n  customKeyFilter?: FilterKeyFunctions\n  filterKeys?: FilterKeys\n  filterMode?: FilterMode\n  noFilter?: boolean\n}\n\n// Composables\nexport const defaultFilter: FilterFunction = (value, query, item) => {\n  if (value == null || query == null) return -1\n\n  return value.toString().toLocaleLowerCase().indexOf(query.toString().toLocaleLowerCase())\n}\n\nexport const makeFilterProps = propsFactory({\n  customFilter: Function as PropType<FilterFunction>,\n  customKeyFilter: Object as PropType<FilterKeyFunctions>,\n  filterKeys: [Array, String] as PropType<FilterKeys>,\n  filterMode: {\n    type: String as PropType<FilterMode>,\n    default: 'intersection',\n  },\n  noFilter: Boolean,\n}, 'filter')\n\nexport function filterItems (\n  items: any[],\n  query: string,\n  options?: {\n    customKeyFilter?: FilterKeyFunctions\n    default?: FilterFunction\n    filterKeys?: FilterKeys\n    filterMode?: FilterMode\n    noFilter?: boolean\n  },\n) {\n  const array: { index: number, matches: Record<string, FilterMatch> }[] = []\n  // always ensure we fall back to a functioning filter\n  const filter = options?.default ?? defaultFilter\n  const keys = options?.filterKeys ? wrapInArray(options.filterKeys) : false\n  const customFiltersLength = Object.keys(options?.customKeyFilter ?? {}).length\n\n  if (!items?.length) return array\n\n  loop:\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i]\n    const customMatches: Record<string, FilterMatch> = {}\n    const defaultMatches: Record<string, FilterMatch> = {}\n    let match: FilterMatch = -1\n\n    if (query && !options?.noFilter) {\n      if (typeof item === 'object') {\n        const filterKeys = keys || Object.keys(item)\n\n        for (const key of filterKeys) {\n          const value = getPropertyFromItem(item as any, key, item)\n          const keyFilter = options?.customKeyFilter?.[key]\n\n          match = keyFilter\n            ? keyFilter(value, query, item)\n            : filter(value, query, item)\n\n          if (match !== -1 && match !== false) {\n            if (keyFilter) customMatches[key] = match\n            else defaultMatches[key] = match\n          } else if (options?.filterMode === 'every') {\n            continue loop\n          }\n        }\n      } else {\n        match = filter(item, query, item)\n        if (match !== -1 && match !== false) {\n          defaultMatches.title = match\n        }\n      }\n\n      const defaultMatchesLength = Object.keys(defaultMatches).length\n      const customMatchesLength = Object.keys(customMatches).length\n\n      if (!defaultMatchesLength && !customMatchesLength) continue\n\n      if (\n        options?.filterMode === 'union' &&\n        customMatchesLength !== customFiltersLength &&\n        !defaultMatchesLength\n      ) continue\n\n      if (\n        options?.filterMode === 'intersection' &&\n        (\n          customMatchesLength !== customFiltersLength ||\n          !defaultMatchesLength\n        )\n      ) continue\n    }\n\n    array.push({ index: i, matches: { ...defaultMatches, ...customMatches } })\n  }\n\n  return array\n}\n\nexport function useFilter <T extends { value: unknown }> (\n  props: FilterProps,\n  items: MaybeRef<T[]>,\n  query: Ref<string | undefined> | (() => string | undefined),\n  options?: {\n    transform?: (item: T) => any\n  }\n) {\n  const filteredItems: Ref<T[]> = ref([])\n  const filteredMatches: Ref<Map<unknown, Record<string, FilterMatch>>> = ref(new Map())\n  const transformedItems = computed(() => options?.transform ? unref(items).map(options?.transform) : unref(items))\n\n  watchEffect(() => {\n    const _query = typeof query === 'function' ? query() : unref(query)\n    const strQuery = (\n      typeof _query !== 'string' &&\n      typeof _query !== 'number'\n    ) ? '' : String(_query)\n\n    const results = filterItems(\n      transformedItems.value,\n      strQuery,\n      {\n        customKeyFilter: props.customKeyFilter,\n        default: props.customFilter,\n        filterKeys: props.filterKeys,\n        filterMode: props.filterMode,\n        noFilter: props.noFilter,\n      },\n    )\n\n    const originalItems = unref(items)\n\n    const _filteredItems: typeof filteredItems['value'] = []\n    const _filteredMatches: typeof filteredMatches['value'] = new Map()\n    results.forEach(({ index, matches }) => {\n      const item = originalItems[index]\n      _filteredItems.push(item)\n      _filteredMatches.set(item.value, matches)\n    })\n    filteredItems.value = _filteredItems\n    filteredMatches.value = _filteredMatches\n  })\n\n  function getMatches (item: T) {\n    return filteredMatches.value.get(item.value)\n  }\n\n  return { filteredItems, filteredMatches, getMatches }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAA;AAkBO,IAAMA,kBAAkBC,aAAa;EAC1CC,aAAaC;EACbC,aAAaD;EACbE,QAAQ,CAACC,QAAQC,MAAM;EACvBC,OAAOL;EAEP,GAAGM,mBAAkB;EACrB,GAAGC,iBAAgB;EACnB,GAAGC,aAAY;EACf,GAAGC,eAAc;AACnB,GAAG,QAAQ;AAEJ,IAAMC,SAASC,iBAAgB,EAAgB;EACpDC,MAAM;EAENC,OAAOhB,gBAAe;EAEtBiB,MAAOD,OAAKE,MAAa;AAAA,QAAX;MAAEC;IAAM,IAACD;AACrB,UAAM;MAAEE;IAAa,IAAIC,aAAaL,KAAK;AAC3C,UAAM;MAAEM;IAAe,IAAIC,WAAWP,KAAK;AAE3CQ,cAAU,MAAAC,YAAAT,MAAAU,KAAA;MAAA,SAEC,CACL,WACA;QACE,yBAAyB,CAAC,CAACV,MAAMX;QACjC,yBAAyBW,MAAMd;QAC/B,yBAAyBc,MAAMZ;QAC/B,oBAAoB,CAAC,CAACe,MAAMQ;QAC5B,uBAAuB,CAAC,CAACR,MAAMS;QAC/B,kBAAkBZ,MAAMR;MAC1B,GACAY,aAAaS,OACbP,eAAeO,OACfb,MAAMc,KAAK;MACZ,SACOd,MAAMe;IAAK,GAAA;MAAAC,SAAAA,MAAA;;AAAA,iBAEjBb,WAAMQ,QAANR,gCAEAA,MAAMa,UAAOP,YAAA,OAAA;UAAA,SAEL;UAAkB,SACjB;YAAEpB,QAAQ4B,cAAcjB,MAAMX,MAAM;UAAE;QAAC,GAAA,CAAAoB,YAAA,SAAA,MAAA,CAG1CN,MAAMa,QAAO,CAAE,CAAA,CAAA,CAAA,KAGnBb,WAAMe,YAANf,iCAEFA,WAAMS,WAANT,8BAAgB;;IAAA,CAAA,CAErB;AAED,WAAO,CAAC;EACV;AACF,CAAC;;;AC5ED,OAAA;AAkBO,IAAMgB,kBAAkBC,aAAa;EAC1CC,OAAOC;EAEP,GAAGC,gBAAe;EAClB,GAAGC,mBAAkB;EACrB,GAAGC,mBAAkB;EACrB,GAAGC,mBAAkB;EACrB,GAAGC,kBAAiB;EACpB,GAAGC,kBAAiB;EACpB,GAAGC,iBAAgB;EACnB,GAAGC,aAAY;EACf,GAAGC,eAAc;AACnB,GAAG,QAAQ;AAEJ,IAAMC,SAASC,iBAAgB,EAAG;EACvCC,MAAM;EAENC,OAAOhB,gBAAe;EAEtBiB,MAAOD,OAAKE,MAAa;AAAA,QAAX;MAAEC;IAAM,IAACD;AACrB,UAAM;MAAEE;IAAa,IAAIC,aAAaL,KAAK;AAC3C,UAAM;MAAEM;MAAwBC;IAAsB,IAAIC,mBAAmBC,MAAMT,OAAO,OAAO,CAAC;AAClG,UAAM;MAAEU;IAAc,IAAIC,UAAUX,KAAK;AACzC,UAAM;MAAEY;IAAgB,IAAIC,aAAab,KAAK;AAC9C,UAAM;MAAEc;IAAiB,IAAIC,aAAaf,KAAK;AAC/C,UAAM;MAAEgB;IAAe,IAAIC,YAAYjB,KAAK;AAC5C,UAAM;MAAEkB;IAAgB,IAAIC,YAAYnB,KAAK;AAC7C,UAAM;MAAEoB;IAAe,IAAIC,WAAWrB,KAAK;AAE3CsB,cAAU,MAAAC,YAAAvB,MAAAwB,KAAA;MAAA,SAEC,CACL,WACApB,aAAaqB,OACbnB,uBAAuBmB,OACvBf,cAAce,OACdX,iBAAiBW,OACjBP,gBAAgBO,OAChBL,eAAeK,OACfzB,MAAM0B,KAAK;MACZ,SACM,CACLnB,sBAAsBkB,OACtBb,gBAAgBa,OAChBT,eAAeS,OACfzB,MAAM2B,KAAK;IACZ,GACSxB,KAAK,CAElB;AAED,WAAO,CAAC;EACV;AACF,CAAC;;;ACxCM,IAAMyB,gBAAgCA,CAACC,OAAOC,OAAOC,SAAS;AACnE,MAAIF,SAAS,QAAQC,SAAS;AAAM,WAAO;AAE3C,SAAOD,MAAMG,SAAQ,EAAGC,kBAAiB,EAAGC,QAAQJ,MAAME,SAAQ,EAAGC,kBAAiB,CAAE;AAC1F;AAEO,IAAME,kBAAkBC,aAAa;EAC1CC,cAAcC;EACdC,iBAAiBC;EACjBC,YAAY,CAACC,OAAOC,MAAM;EAC1BC,YAAY;IACVC,MAAMF;IACNG,SAAS;EACX;EACAC,UAAUC;AACZ,GAAG,QAAQ;AAEJ,SAASC,YACdC,OACApB,OACAqB,SAOA;AA3DF;AA4DE,QAAMC,QAAmE,CAAA;AAEzE,QAAMC,UAASF,mCAASL,YAAWlB;AACnC,QAAM0B,QAAOH,mCAASV,cAAac,YAAYJ,QAAQV,UAAU,IAAI;AACrE,QAAMe,sBAAsBhB,OAAOc,MAAKH,mCAASZ,oBAAmB,CAAC,CAAC,EAAEkB;AAExE,MAAI,EAACP,+BAAOO;AAAQ,WAAOL;AAE3BM;AACA,aAASC,IAAI,GAAGA,IAAIT,MAAMO,QAAQE,KAAK;AACrC,YAAM5B,OAAOmB,MAAMS,CAAC;AACpB,YAAMC,gBAA6C,CAAC;AACpD,YAAMC,iBAA8C,CAAC;AACrD,UAAIC,QAAqB;AAEzB,UAAIhC,SAAS,EAACqB,mCAASJ,WAAU;AAC/B,YAAI,OAAOhB,SAAS,UAAU;AAC5B,gBAAMU,aAAaa,QAAQd,OAAOc,KAAKvB,IAAI;AAE3C,qBAAWgC,OAAOtB,YAAY;AAC5B,kBAAMZ,QAAQmC,oBAAoBjC,MAAagC,KAAKhC,IAAI;AACxD,kBAAMkC,aAAYd,wCAASZ,oBAATY,mBAA2BY;AAE7CD,oBAAQG,YACJA,UAAUpC,OAAOC,OAAOC,IAAI,IAC5BsB,OAAOxB,OAAOC,OAAOC,IAAI;AAE7B,gBAAI+B,UAAU,MAAMA,UAAU,OAAO;AACnC,kBAAIG;AAAWL,8BAAcG,GAAG,IAAID;;AAC/BD,+BAAeE,GAAG,IAAID;YAC7B,YAAWX,mCAASP,gBAAe,SAAS;AAC1C,uBAASc;YACX;UACF;QACF,OAAO;AACLI,kBAAQT,OAAOtB,MAAMD,OAAOC,IAAI;AAChC,cAAI+B,UAAU,MAAMA,UAAU,OAAO;AACnCD,2BAAeK,QAAQJ;UACzB;QACF;AAEA,cAAMK,uBAAuB3B,OAAOc,KAAKO,cAAc,EAAEJ;AACzD,cAAMW,sBAAsB5B,OAAOc,KAAKM,aAAa,EAAEH;AAEvD,YAAI,CAACU,wBAAwB,CAACC;AAAqB;AAEnD,aACEjB,mCAASP,gBAAe,WACxBwB,wBAAwBZ,uBACxB,CAACW;AACD;AAEF,aACEhB,mCAASP,gBAAe,mBAEtBwB,wBAAwBZ,uBACxB,CAACW;AAEH;MACJ;AAEAf,YAAMiB,KAAK;QAAEC,OAAOX;QAAGY,SAAS;UAAE,GAAGV;UAAgB,GAAGD;QAAc;MAAE,CAAC;IAC3E;AAEA,SAAOR;AACT;AAEO,SAASoB,UACdC,OACAvB,OACApB,OACAqB,SAGA;AACA,QAAMuB,gBAA0BC,IAAI,CAAA,CAAE;AACtC,QAAMC,kBAAkED,IAAI,oBAAIE,IAAG,CAAE;AACrF,QAAMC,mBAAmBC,SAAS,OAAM5B,mCAAS6B,aAAYC,MAAM/B,KAAK,EAAEgC,IAAI/B,mCAAS6B,SAAS,IAAIC,MAAM/B,KAAK,CAAC;AAEhHiC,cAAY,MAAM;AAChB,UAAMC,SAAS,OAAOtD,UAAU,aAAaA,MAAK,IAAKmD,MAAMnD,KAAK;AAClE,UAAMuD,WACJ,OAAOD,WAAW,YAClB,OAAOA,WAAW,WAChB,KAAKzC,OAAOyC,MAAM;AAEtB,UAAME,UAAUrC,YACd6B,iBAAiBjD,OACjBwD,UACA;MACE9C,iBAAiBkC,MAAMlC;MACvBO,SAAS2B,MAAMpC;MACfI,YAAYgC,MAAMhC;MAClBG,YAAY6B,MAAM7B;MAClBG,UAAU0B,MAAM1B;IAClB,CAAC;AAGH,UAAMwC,gBAAgBN,MAAM/B,KAAK;AAEjC,UAAMsC,iBAAgD,CAAA;AACtD,UAAMC,mBAAoD,oBAAIZ,IAAG;AACjES,YAAQI,QAAQC,UAAwB;AAAA,UAAvB;QAAErB;QAAOC;MAAQ,IAACoB;AACjC,YAAM5D,OAAOwD,cAAcjB,KAAK;AAChCkB,qBAAenB,KAAKtC,IAAI;AACxB0D,uBAAiBG,IAAI7D,KAAKF,OAAO0C,OAAO;IAC1C,CAAC;AACDG,kBAAc7C,QAAQ2D;AACtBZ,oBAAgB/C,QAAQ4D;EAC1B,CAAC;AAED,WAASI,WAAY9D,MAAS;AAC5B,WAAO6C,gBAAgB/C,MAAMiE,IAAI/D,KAAKF,KAAK;EAC7C;AAEA,SAAO;IAAE6C;IAAeE;IAAiBiB;EAAW;AACtD;",
  "names": ["makeVTableProps", "propsFactory", "fixedHeader", "Boolean", "fixedFooter", "height", "Number", "String", "hover", "makeComponentProps", "makeDensityProps", "makeTagProps", "makeThemeProps", "VTable", "genericComponent", "name", "props", "setup", "_ref", "slots", "themeClasses", "provideTheme", "densityClasses", "useDensity", "useRender", "_createVNode", "tag", "top", "bottom", "value", "class", "style", "default", "convertToUnit", "wrapper", "makeVSheetProps", "propsFactory", "color", "String", "makeBorderProps", "makeComponentProps", "makeDimensionProps", "makeElevationProps", "makeLocationProps", "makePositionProps", "makeRoundedProps", "makeTagProps", "makeThemeProps", "VSheet", "genericComponent", "name", "props", "setup", "_ref", "slots", "themeClasses", "provideTheme", "backgroundColorClasses", "backgroundColorStyles", "useBackgroundColor", "toRef", "borderClasses", "useBorder", "dimensionStyles", "useDimension", "elevationClasses", "useElevation", "locationStyles", "useLocation", "positionClasses", "usePosition", "roundedClasses", "useRounded", "useRender", "_createVNode", "tag", "value", "class", "style", "defaultFilter", "value", "query", "item", "toString", "toLocaleLowerCase", "indexOf", "makeFilterProps", "propsFactory", "customFilter", "Function", "customKeyFilter", "Object", "filterKeys", "Array", "String", "filterMode", "type", "default", "noFilter", "Boolean", "filterItems", "items", "options", "array", "filter", "keys", "wrapInArray", "customFiltersLength", "length", "loop", "i", "customMatches", "defaultMatches", "match", "key", "getPropertyFromItem", "keyFilter", "title", "defaultMatchesLength", "customMatchesLength", "push", "index", "matches", "useFilter", "props", "filteredItems", "ref", "filteredMatches", "Map", "transformedItems", "computed", "transform", "unref", "map", "watchEffect", "_query", "strQuery", "results", "originalItems", "_filteredItems", "_filteredMatches", "forEach", "_ref", "set", "getMatches", "get"]
}
